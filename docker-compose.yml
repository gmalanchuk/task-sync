version: '3'

services:
  task:
    container_name: task
    build: .
    restart: always
    volumes:
      - ./:/task
    command: >
      sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    ports:
      - '8000:8000'
    env_file:
      - .env
    depends_on:
      - postgres
    networks:
      - network

  postgres:
    container_name: task-postgres
    hostname: ${POSTGRES_HOST}
    image: postgres:alpine
    restart: always
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - '${POSTGRES_PORT}:5433'
    environment:
      - POSTGRES_DB=${POSTGRES_NAME}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASS}
      - PGPORT=5433
    networks:
      - network

  celery:
    container_name: task-celery
    build: .
    restart: always
    volumes:
      - ./:/task
    command: 'celery -A config worker --loglevel=info'
    env_file:
      - .env
    depends_on:
      - task
      - rabbitmq
    networks:
      - network

  flower:
    container_name: task-flower
    restart: always
    build: .
    command: 'celery -A config flower'
    ports:
      - '${FLOWER_PORT}:5555'
    depends_on:
      - celery
      - task
      - rabbitmq
    networks:
      - network

volumes:
  postgres_data:


networks:
  network:
    external: true
    name: authentication_network
